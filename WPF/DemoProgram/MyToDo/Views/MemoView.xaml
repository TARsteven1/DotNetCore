<UserControl
    x:Class="MyToDo.Views.MemoView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:MyToDo.Views"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:itb="clr-namespace:MyToDo.Common.Converters"
	xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
	<!--引用命名空间下的指定类-->
	<UserControl.Resources>
		<itb:IntToBool x:Key="IntToBool"/>
	</UserControl.Resources>
    <materialDesign:DialogHost>
        <materialDesign:DrawerHost IsRightDrawerOpen="{Binding IsRightDrawerOpen}">
            <materialDesign:DrawerHost.RightDrawerContent>
                <DockPanel Width="300" LastChildFill="False">
                    <TextBlock
                        Padding="20,10"
                        DockPanel.Dock="Top"
                        FontSize="20"
                        FontWeight="Bold"
                        Text="添加备忘录" />

                    <TextBox
                        Margin="20,0" Text="{Binding CurrentDto.Title}"
                        materialDesign:HintAssist.Hint="请输入备忘录概要"
                        DockPanel.Dock="Top" />
                    <TextBox
                        MinHeight="100"
                        Margin="20,0"
						Text="{Binding CurrentDto.Content}"
                        materialDesign:HintAssist.Hint="请输入备忘录内容"
                        DockPanel.Dock="Top" />
					<Button Command="{Binding ExecuteCommand}" CommandParameter="保存"    
                        Margin="20"
                      
                        Cursor="Hand"
                        DockPanel.Dock="Top" >
						<!--Content="添加到备忘录"-->
						<Button.Content>
							<TextBlock Text="{Binding CommitTxt}"/>
						</Button.Content>
					</Button>
                </DockPanel>
            </materialDesign:DrawerHost.RightDrawerContent>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <StackPanel Margin="15,0,0,0" Orientation="Horizontal">
                    <!--  使用materialDesign的输入框清除按钮  -->
					<TextBox   Text="{Binding Search,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                        Width="250"
                        VerticalAlignment="Center"
                        materialDesign:HintAssist.Hint="查找备忘录..."
                        materialDesign:TextFieldAssist.HasClearButton="True" >
						<TextBox.InputBindings>
							<KeyBinding Key="Enter" Command="{Binding ExecuteCommand}" CommandParameter="查询"/>
						</TextBox.InputBindings>
					</TextBox>
				</StackPanel>
                <Button
                    Margin="10,5"
                    HorizontalAlignment="Right"
                     Command="{Binding ExecuteCommand}" CommandParameter="新增"
                    Content="+ 添加备忘录" />

				<StackPanel Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center"
							Visibility="{Binding MemoDtos.Count,Converter={StaticResource IntToBool}}">
					<Image Source="/Resource/Head/head.jpg" Width="120" Height="120"/>
					<TextBlock Text="尝试添加一些备忘录,以便在此处查看他们." Margin="0,10" FontSize="18"/>
				</StackPanel>
				<!--  添加滚动条 ： 只需在外部加ScrollViewer即可支持滚动条  -->
                <ScrollViewer Grid.Row="1">
                    <ItemsControl HorizontalAlignment="Center" ItemsSource="{Binding MemoDtos}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.ItemTemplate>
							<DataTemplate>
								<!--  设置动画  :渐入效果  -->
								<materialDesign:TransitioningContent OpeningEffect="{materialDesign:TransitionEffect Kind=ExpandIn}" >
									<Grid
                                        Width="220"
                                        MinHeight="180"
                                        MaxHeight="250"
                                        Margin="8">
										<i:Interaction.Triggers>
											<i:EventTrigger EventName="MouseLeftButtonUp">
												<i:InvokeCommandAction CommandParameter="{Binding }" Command="{Binding DataContext.SelectedCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ItemsControl}}"/>
											</i:EventTrigger>
										</i:Interaction.Triggers>
										<Grid.RowDefinitions>
											<RowDefinition Height="auto" />
											<RowDefinition />
										</Grid.RowDefinitions>
										<!--  右上三个点删除按钮  -->
										<materialDesign:PopupBox
                                            Margin="0,5"
                                            HorizontalAlignment="Right"
                                            Panel.ZIndex="1">
											<Button Content="删除" CommandParameter="{Binding }" Command="{Binding DataContext.DeleteCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ItemsControl}}"/>
										</materialDesign:PopupBox>
										<!--  加边角效果就加一个Border,Grid.RowSpan是跨行范围  -->
										<Border
                                            Grid.RowSpan="2"
                                          Background="DarkCyan"
                                            CornerRadius="3" />
										<TextBlock
                                            Padding="10,5"
                                            FontWeight="Bold"
                                            Text="{Binding Title}" />
										<TextBlock
                                            Grid.Row="1"
                                            Padding="10,5"
                                            Text="{Binding Content}" />
										<Canvas Grid.RowSpan="2" ClipToBounds="True">
											<Border
                                                Canvas.Top="10"
                                                Canvas.Right="-40"
                                                Width="120"
                                                Height="120"
                                                Background="#FFFFFF"
                                                CornerRadius="100"
                                                Opacity="0.1" />
											<Border
                                                Canvas.Top="80"
                                                Canvas.Right="-20"
                                                Width="120"
                                                Height="120"
                                                Background="#FFFFFF"
                                                CornerRadius="100"
                                                Opacity="0.1" />

										</Canvas>
									</Grid>
								</materialDesign:TransitioningContent>
							</DataTemplate>

							
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>
            </Grid>
        </materialDesign:DrawerHost>
    </materialDesign:DialogHost>

</UserControl>
